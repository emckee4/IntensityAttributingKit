
Today:

IAKit:
    Globals: max embedded image size (total pictures), default rendering,
    add size transformer

IATV:
    -reenable copy and paste
    -link inserution should be as pasted NSURL with NSLinkAttributeName, or link should be detected and inserted at send time (add finalize()->NSAttributedString)



RawIntensity:
    -add tunable non-linear algo for force-intensity mapping

Accessory view:
    OPTION MENU: want option menu of some sort on accessory view for, among other things, changing intensity renderings
    tweak constraints (particularly in intensityAdjuster), also large, squareish camera, wider transform sample



need to reimplement copy/paste in iatextview
    copy function should use super.copy and add IAdata as another type of that
        -- will overriding copy be sufficient for inbuilt cut to work as desired?


--refactor how transformers are added? could use enum or add a singleton manager class to hold refs, or both


Icons: return, options, camera, ?

-Make kb text color consistant, add highlight effect (background change color?)

--Longer term:
    make all keys some derivative of expanding keys, include larger expansion style option as used in system keyboard popups
        -give some sort of feedback on selection, like flash with duration before hiding or light haptic/ click if something suitable is available


--Performance:
    KB rendering:
        consider using spritesheet for keys



    IAString Performance
        Keeping "deep" IAattributes may significantly increase storage size
            It may be possible to retain most of the performance benefits of deep attributes through a combination of partition and removal by range in the transform function
            "shallow" IAAttributes would let us invalidate all in a transform, letting us skip the setter check, and possibly perform more actions by range






