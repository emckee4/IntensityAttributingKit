ExpandingPressureKey:
    tuning:
        enable subview highlighting?
        on selection: flash item?, haptic?, option to reorder array and set as default
    enable dynamic reordering (changing default key)


add additional punctuation/numeric views

Accessory view:
    Need different accessoryView layouts depending on orientation
        use popup for overflow of normal options, including Transform style
    Different Accessories:
        Accessory w/pressure:
        [swap?, intensity dropdown/indicator, insert photo, etc, options?, send/send-as]

        Accessory w/system:
        [swap, intensityslider, ?? options, popup options]

        Accessory no pressure:
        [insert, intensity, options, sendas]

need to reimplement copy/paste in iatextview
    copy function should use super.copy and add IAdata as another type of that
        -- will overriding copy be sufficient for inbuilt cut to work as desired?


--refactor how transformers are added? could use enum or add a singleton manager class to hold refs, or both


fix locking key not displaying 3 phases







--Performance:
    KB rendering:
        consider using spritesheet for keys



    IAString Performance
        Keeping "deep" IAattributes may significantly increase storage size
            It may be possible to retain most of the performance benefits of deep attributes through a combination of partition and removal by range in the transform function
            "shallow" IAAttributes would let us invalidate all in a transform, letting us skip the setter check, and possibly perform more actions by range






